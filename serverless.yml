service: pollx
frameworkVersion: '2'

plugins:
  - serverless-plugin-typescript
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221

  timeout: 3
  memorySize: 128

  httpApi:
    cors: true

  stage: dev
  region: us-east-1

  iamManagedPolicies:
    - arn:aws:iam::aws:policy/service-role/AWSLambdaDynamoDBExecutionRole

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:Query
        - dynamodb:BatchWriteItem
      Resource:
        - !GetAtt PollTable.Arn

  environment:
    POLLS: !Ref PollTable

functions:
# get a poll by id
  GetPoll:
    handler: src/lambdas/GetPoll.handler
    events:
      - httpApi:
          path: /poll/{id}
          method: get
          request:
            parameters:
              paths:
                id: true

# get a poll and values by id
  GetPollResults:
    handler: src/lambdas/GetPollResults.handler
    events:
      - httpApi:
          path: /results/{id}
          method: get
          request:
            parameters:
              paths:
                id: true

# watch table changes for submission, update choice values
  IngestSubmission:
    handler: src/lambdas/IngestSubmission.handler

# send json poll item to create poll
  CreatePoll:
    handler: src/lambdas/CreatePoll.handler
    events:
      - httpApi:
          path: /poll
          method: post

# send json submission item to vote
  Submit:
    handler: src/lambdas/Submit.handler
    events:
      - httpApi:
          path: /poll/{id}
          method: post
          request:
            parameters:
              paths:
                id: true

resources:
  Resources:
    PollTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-${self:provider.stage}-PollTable
        BillingMode: PAY_PER_REQUEST
        StreamSpecification:
          StreamViewType: NEW_IMAGE
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
          - AttributeName: PK2
            AttributeType: S
          - AttributeName: IP
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: UserIndex
            KeySchema:
              - AttributeName: PK2
                KeyType: HASH
              - AttributeName: PK
                KeyType: RANGE
            Projection:
              ProjectionType: ALL

    TableEventSourceMapping:
      Type: AWS::Lambda::EventSourceMapping
      Properties:
        StartingPosition: LATEST
        EventSourceArn: !GetAtt PollTable.StreamArn
        FunctionName: !GetAtt IngestSubmissionLambdaFunction.Arn
        MaximumRetryAttempts: 1